# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: CI

on:
  push:
    branches:
      - main
      - release/**
    paths-ignore:
      - '**.md'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/PULL_REQUEST_TEMPLATE.md'
      - '.asf.yaml'
      - '.licenserc.yaml'
      - '.commitlintrc.yaml'
      - 'LICENSE'
      - 'NOTICE'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/PULL_REQUEST_TEMPLATE.md'
      - '.asf.yaml'
      - '.licenserc.yaml'
      - '.commitlintrc.yaml'
      - 'LICENSE'
      - 'NOTICE'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  rust-tests:
    strategy:
      fail-fast: false
      matrix:
        # TODO: add windows which does not support container
        os: [ ubuntu-22.04 ]
    runs-on: ${{ matrix.os }}
    container:
      image: xd009642/tarpaulin:0.30.0
      options: --security-opt seccomp=unconfined
    steps:
      - uses: actions/checkout@v4
      - name: Rust unit tests with coverage report
        # https://github.com/xd009642/tarpaulin/issues/1092#issuecomment-1407739176
        run: cargo tarpaulin --engine llvm --no-dead-code --no-fail-fast --all-features --workspace -o xml --output-dir ./cov-reports
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: cov-report-rust-tests-${{ runner.os }}
          path: ./cov-reports
          if-no-files-found: 'error'

  python-tests:
    strategy:
      fail-fast: false
      matrix:
        # TODO: add windows
        os: [ ubuntu-22.04, macos-14 ]
        python-version: [ '3.9', '3.12' ]
        exclude:
          - os: macos-14
            python-version: '3.9'
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: pyproject.toml
      - name: Setup Python venv
        working-directory: ./python
        run: |
          make setup-venv
          source venv/bin/activate
          make develop
      - name: Python unit tests with coverage report
        run: |
          pushd python
          source venv/bin/activate
          coverage run --include 'hudi/*' -m pytest -v
          # move to parent so the reported file paths will match the actual repo paths
          popd
          coverage xml --data-file=python/.coverage -o ./cov-reports/cov-report-python-tests-${{ join(matrix.*, '-') }}.xml
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: cov-report-python-tests-${{ join(matrix.*, '-') }}
          path: ./cov-reports
          if-no-files-found: 'error'


  publish-coverage:
    name: Publish coverage reports to codecov.io
    runs-on: ubuntu-latest
    needs: [ rust-tests, python-tests ]
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: cov-report-*
          merge-multiple: true
          path: ./cov-reports
      - name: Upload coverage reports to codecov.io
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./cov-reports/*
